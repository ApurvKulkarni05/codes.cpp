this is hard problem on stack concept but i used array concept beause 
in this part i used 2 for loop to determine maximum height rightmax , leftmax so i get understand water trapped how much exactly wter trapped above any bar
so in this problem we see the water trapped above any bar depends on the minimum of the tallest bars to its left and right, minus its own height.
so i gain related knowledge about this problem on google and understand bts ..
so this is challenge 
class Solution {
public:
    int trap(vector<int>& height) {
        int n=height.size();

        vector<int> lmax(n,0);
        vector<int> rmax(n,0);

        lmax[0]=height[0];
        rmax[n-1]=height[n-1];

        for(int i=1 ; i<n ; i++){

          lmax[i]= max(lmax[i-1], height[i]);

        }
        for(int i=n-2;i>=0;i--){

            rmax[i]= max(rmax[i+1], height[i]);
        }

        int ans=0;
        for(int i=0;i<n;i++){
            ans+= min(lmax[i], rmax[i])-height[i];
        }
        return ans;
    }
};
thank you 
